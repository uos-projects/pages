---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="ROSIX 白皮书 - UOS技术规范草案" description="ROSIX (Resource Operating System Interface) 白皮书 v1.2，面向电力信息场景的人机物融合操作系统技术规范草案">
  <main class="container">
    <div class="hero">
      <h1>ROSIX 白皮书 v1.2（标准草案）</h1>
      <p class="subtitle">Resource Operating System Interface - UOS技术规范草案</p>
    </div>

    <div class="content">
      <section class="version-history">
        <h2>版本历史</h2>
        <ul>
          <li><strong>v1.0</strong>：初始草案，2025年1月发布，定义 ROSIX 核心接口和理念。</li>
          <li><strong>v1.1</strong>：修订版，2025年8月21日，扩展细节、添加示例、增强专业性。</li>
          <li><strong>v1.2</strong>：当前版本，2025年12月，完善技术细节，增加行业用例和生态建设指南。</li>
        </ul>
      </section>

      <section class="overview">
        <h2>1. 概述</h2>
        <p>ROSIX (Resource Operating System Interface) 是面向电力信息场景的人机物融合操作系统（UOS）的核心技术规范。它提供统一的资源抽象、时空管理、实时流处理、规则引擎、工作流编排和AI集成能力，支持工业互联网场景下的复杂系统构建。</p>
        
        <h3>1.1 设计理念</h3>
        <ul>
          <li><strong>场景就是计算机</strong>：将物理世界场景抽象为可编程的计算环境</li>
          <li><strong>软件定义系统</strong>：通过软件配置实现系统行为的灵活调整</li>
          <li><strong>人机物协同</strong>：支持人、机器、物理实体的无缝协作</li>
          <li><strong>泛在互联</strong>：提供统一的资源访问和通信接口</li>
        </ul>

        <h3>1.2 技术特性</h3>
        <ul>
          <li><strong>资源抽象</strong>：统一的资源模型，支持设备、数据、服务等各类资源</li>
          <li><strong>时空管理</strong>：基于时空坐标的资源组织和查询</li>
          <li><strong>实时流处理</strong>：支持高并发、低延迟的数据流处理</li>
          <li><strong>规则引擎</strong>：声明式规则定义和自动执行</li>
          <li><strong>工作流编排</strong>：复杂任务的自动化编排和执行</li>
          <li><strong>AI集成</strong>：内置AI能力，支持智能决策和优化</li>
        </ul>
      </section>

      <section class="architecture">
        <h2>2. 系统架构</h2>
        <p>ROSIX 采用分层架构设计，从底层到顶层包括：</p>
        
        <h3>2.1 核心层 (ROSIX.Core)</h3>
        <p>提供基础的资源操作接口，包括资源的打开、读写、调用和订阅。</p>
        
        <h3>2.2 资源空间层 (ResourceSpace)</h3>
        <p>提供基于时空坐标的资源管理和查询能力。</p>
        
        <h3>2.3 流处理层 (Stream)</h3>
        <p>支持实时数据流的处理和分析。</p>
        
        <h3>2.4 规则引擎层 (Rule)</h3>
        <p>提供声明式规则定义和自动执行能力。</p>
        
        <h3>2.5 工作流层 (Workflow)</h3>
        <p>支持复杂任务的编排和自动化执行。</p>
        
        <h3>2.6 AI集成层 (AI)</h3>
        <p>提供AI代理和智能决策能力。</p>
      </section>

      <section class="examples">
        <h2>3. 应用示例</h2>
        
        <h3>3.1 电力巡检场景</h3>
        <p>以无人机巡检变电站为例，展示ROSIX的完整应用流程：</p>
        
        <h4>3.1.1 资源管理</h4>
        <p>通过ROSIX.Core接口打开和管理无人机、传感器等资源。</p>
        
        <h4>3.1.2 实时流处理</h4>
        <p>使用Stream模块处理温度、视频等实时数据流。</p>
        
        <h4>3.1.3 规则定义</h4>
        <p>通过Rule引擎定义过热警报等业务规则。</p>
        
        <h4>3.1.4 工作流编排</h4>
        <p>使用Workflow模块编排完整的巡检流程。</p>
        
        <h4>3.1.5 AI集成</h4>
        <p>通过AI模块实现缺陷检测等智能分析。</p>
      </section>

      <section class="security">
        <h2>4. 安全与一致性</h2>
        
        <h3>4.1 权限模型</h3>
        <p>基于 JWT 的 AccessToken，支持角色访问控制（RBAC）。</p>

        <h3>4.2 隔离机制</h3>
        <ul>
          <li><strong>Domain</strong>：资源域隔离，确保不同业务域的资源互不干扰</li>
          <li><strong>Namespace</strong>：命名空间隔离，支持多租户环境</li>
        </ul>

        <h3>4.3 一致性保证</h3>
        <ul>
          <li><strong>强一致性</strong>：基于 Raft 算法，用于关键控制操作</li>
          <li><strong>最终一致性</strong>：基于 Gossip 协议，用于数据流处理</li>
        </ul>

        <h3>4.4 审计与合规</h3>
        <p>记录操作日志，符合以下标准：</p>
        <ul>
          <li>GDPR（通用数据保护条例）</li>
          <li>ISO 27001（信息安全管理体系）</li>
          <li>GB/T 2887-2011（电力设备巡检规范）</li>
        </ul>
      </section>

      <section class="implementation">
        <h2>5. 实施与生态</h2>
        
        <h3>5.1 开发环境</h3>
        <ul>
          <li><strong>ROSIX SDK</strong>：核心开发工具包</li>
          <li><strong>多语言绑定</strong>：支持 C++、Rust、Java、Python</li>
          <li><strong>测试框架</strong>：单元测试（JUnit）、模拟测试（Mockito）</li>
        </ul>

        <h3>5.2 部署方案</h3>
        <ul>
          <li><strong>容器化</strong>：支持 Docker 容器化部署</li>
          <li><strong>集群管理</strong>：支持 Kubernetes 集群编排</li>
          <li><strong>性能指标</strong>：响应时间 < 100ms，吞吐量 > 1000 events/s</li>
        </ul>

        <h3>5.3 开源生态</h3>
        <ul>
          <li><strong>核心仓库</strong>：<a href="https://github.com/uos-projects/uos-rosix" target="_blank">https://github.com/uos-projects/uos-rosix</a></li>
          <li><strong>Java绑定</strong>：<a href="https://github.com/uos-projects/rosix-java-binding" target="_blank">https://github.com/uos-projects/rosix-java-binding</a></li>
          <li><strong>贡献方式</strong>：提交 Issue 或 Pull Request</li>
        </ul>
      </section>

      <section class="api-reference">
        <h2>6. API 参考</h2>
        
        <table class="api-table">
          <thead>
            <tr>
              <th>模块</th>
              <th>代表接口</th>
              <th>描述</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>ROSIX.Core</td>
              <td>rosix_open / rosix_read / rosix_invoke / rosix_subscribe</td>
              <td>基础资源操作</td>
            </tr>
            <tr>
              <td>ResourceSpace</td>
              <td>rosix_resolve / rosix_update_spatial / rosix_update_temporal</td>
              <td>时空管理</td>
            </tr>
            <tr>
              <td>Stream</td>
              <td>rosix_stream_open / rosix_stream_subscribe</td>
              <td>实时流处理</td>
            </tr>
            <tr>
              <td>Rule</td>
              <td>rosix_rule_define / rosix_rule_enable</td>
              <td>规则定义与启用</td>
            </tr>
            <tr>
              <td>Workflow</td>
              <td>rosix_workflow_create / rosix_workflow_add_task</td>
              <td>工作流编排</td>
            </tr>
            <tr>
              <td>AI</td>
              <td>rosix_agent_invoke / rosix_agent_bind</td>
              <td>AI 代理调用与绑定</td>
            </tr>
          </tbody>
        </table>
      </section>

      <section class="glossary">
        <h2>7. 术语表</h2>
        <dl>
          <dt><strong>Resource</strong></dt>
          <dd>抽象实体，包含 URI、属性和行为，是ROSIX系统的基本操作单元</dd>
          
          <dt><strong>Actor 模型</strong></dt>
          <dd>并发计算模型，基于消息传递，支持高并发和分布式计算</dd>
          
          <dt><strong>Digital Twin</strong></dt>
          <dd>物理实体的数字映射，实现虚实融合的协同计算</dd>
          
          <dt><strong>AccessToken</strong></dt>
          <dd>JWT 格式的权限令牌，用于身份认证和授权</dd>
        </dl>
      </section>

      <section class="future">
        <h2>8. 未来展望</h2>
        <p>UOS 和 ROSIX 将持续演进，计划在以下方面进行扩展：</p>
        <ul>
          <li><strong>AI能力增强</strong>：集成强化学习、联邦学习等先进AI技术</li>
          <li><strong>硬件支持</strong>：支持5G/6G网络、边缘计算设备</li>
          <li><strong>生态集成</strong>：与AWS、EdgeX Foundry等主流平台集成</li>
          <li><strong>标准制定</strong>：推动成为国际标准（如IEEE P2413）</li>
        </ul>
      </section>

      <section class="references">
        <h2>9. 参考文献</h2>
        <ul>
          <li>POSIX 标准（IEEE 1003.1）</li>
          <li>GB/T 2887-2011（电力设备巡检规范）</li>
          <li>UOS 项目仓库：<a href="https://github.com/uos-projects/uos-rosix" target="_blank">https://github.com/uos-projects/uos-rosix</a></li>
        </ul>
      </section>

      <section class="conclusion">
        <h2>10. 结语</h2>
        <p>UOS 通过 ROSIX 提供统一的操作系统框架，支持人、机、物协同。本白皮书增强了技术细节和行业用例，欢迎社区反馈以进一步完善。</p>
        <p>更多信息请访问：<a href="https://github.com/uos-projects/uos-rosix" target="_blank">https://github.com/uos-projects/uos-rosix</a></p>
      </section>
    </div>
  </main>

  <style>
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }

    .hero {
      text-align: center;
      margin-bottom: 3rem;
      padding: 2rem 0;
      border-bottom: 2px solid #e0e0e0;
    }

    .hero h1 {
      font-size: 2.5rem;
      color: #2c3e50;
      margin-bottom: 1rem;
    }

    .subtitle {
      font-size: 1.2rem;
      color: #7f8c8d;
      margin: 0;
    }

    .content {
      line-height: 1.8;
    }

    .content h2 {
      color: #2c3e50;
      border-bottom: 1px solid #bdc3c7;
      padding-bottom: 0.5rem;
      margin-top: 2.5rem;
      margin-bottom: 1.5rem;
    }

    .content h3 {
      color: #34495e;
      margin-top: 2rem;
      margin-bottom: 1rem;
    }

    .content h4 {
      color: #34495e;
      margin-top: 1.5rem;
      margin-bottom: 0.8rem;
    }

    .content p {
      margin-bottom: 1rem;
      text-align: justify;
    }

    .content ul, .content ol {
      margin-bottom: 1rem;
      padding-left: 2rem;
    }

    .content li {
      margin-bottom: 0.5rem;
    }

    .api-table {
      width: 100%;
      border-collapse: collapse;
      margin: 1.5rem 0;
    }

    .api-table th,
    .api-table td {
      border: 1px solid #dee2e6;
      padding: 0.75rem;
      text-align: left;
    }

    .api-table th {
      background-color: #f8f9fa;
      font-weight: 600;
      color: #495057;
    }

    .api-table tr:nth-child(even) {
      background-color: #f8f9fa;
    }

    dl {
      margin: 1rem 0;
    }

    dt {
      font-weight: 600;
      color: #2c3e50;
      margin-top: 1rem;
    }

    dd {
      margin-left: 1rem;
      margin-bottom: 0.5rem;
    }

    .version-history ul {
      list-style-type: none;
      padding-left: 0;
    }

    .version-history li {
      margin-bottom: 0.8rem;
      padding-left: 1rem;
      border-left: 3px solid #3498db;
    }

    a {
      color: #3498db;
      text-decoration: none;
    }

    a:hover {
      text-decoration: underline;
    }

    @media (max-width: 768px) {
      .container {
        padding: 1rem;
      }

      .hero h1 {
        font-size: 2rem;
      }

      .subtitle {
        font-size: 1rem;
      }

      .api-table {
        font-size: 0.9rem;
      }
    }
  </style>
</Layout>